Using c++ setup from: 
    https://developers.google.com/edu/c++/getting-started
    https://arachnoid.com/cpptutor/setup_unix.html

Added the build script to /usr/local/bin

Actually, maybe makefiles will be a better way to go, especially
if I'm going to carve out some common stuff to shared libraries.
https://www.cs.bu.edu/teaching/cpp/writing-makefiles/

Also, general thoughts on how to structure the project(s):
https://hiltmon.com/blog/2013/07/03/a-simple-c-plus-plus-project-structure/

I haven't used C++ since my time as a baby dev back at MSFT around 2001, so maybe a linter will be useful:
http://clang.llvm.org/extra/clang-tidy/

Making libraries in C++:
https://www.oreilly.com/library/view/c-cookbook/0596007612/ch01s17.html
https://renenyffenegger.ch/notes/development/languages/C-C-plus-plus/GCC/create-libraries/index

A C++ reference:
http://www.cplusplus.com/reference/ostream/ostream/

Core guidelines:
https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#S-gsl

STL Containers review:
https://www.cs.helsinki.fi/u/tpkarkka/alglib/k06/lectures/containers.html

BOOST Libraries:
https://theboostcpplibraries.com/

A fine C++ REPL:
http://cpp.sh/

Other random notes:
https://clang.llvm.org/index.html
https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html
https://www.atlassian.com/git/tutorials/saving-changes/gitignore

Rabbit Hole:
Replacing Make with Ninja: https://jpospisil.com/2014/03/16/replacing-make-with-ninja.html
